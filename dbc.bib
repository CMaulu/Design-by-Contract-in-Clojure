




@Misc{8ways,
  title = 	 {8 ways to report errors in Haskell},
  author = {Kidd, Eric},
  howpublished = {\url{http://www.randomhacks.net/articles/2007/03/10/haskell-8-ways-to-report-errors}},
  year = 2007
}

Clojure website:
@book{Guttag:1993:LLT:151155,
 author = {Guttag, John V. and Horning, James J.},
 title = {Larch: languages and tools for formal specification},
 year = {1993},
 isbn = {0-387-94006-5},
 publisher = {Springer-Verlag New York, Inc.},
 address = {New York, NY, USA},
}


@article{Hoare,
 author = {Hoare, C. A. R.},
 title = {Assertions: A Personal Perspective},
 journal = {IEEE Ann. Hist. Comput.},
 volume = {25},
 issue = {2},
 month = {April},
 year = {2003},
 issn = {1058-6180},
 pages = {14--25},
 numpages = {12},
 url = {http://portal.acm.org/citation.cfm?id=858595.858601},
 doi = {10.1109/MAHC.2003.1203056},
 acmid = {858601},
 publisher = {IEEE Educational Activities Department},
 address = {Piscataway, NJ, USA},
}

Definition of fn:
@article{Parnas,
 author = {Parnas, D. L.},
 title = {A technique for software module specification with examples},
 journal = {Commun. ACM},
 volume = {26},
 issue = {1},
 month = {January},
 year = {1983},
 issn = {0001-0782},
 pages = {75--78},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/357980.358011},
 doi = {http://doi.acm.org/10.1145/357980.358011},
 acmid = {358011},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {modules, software, software design, software engineering, specification},
}

@Misc{RFC3198,
  author =	 {Westerinin, A. and Schnilein J. and Strassner J. and Scherling M.},
  title =	 {Terminology for Policy Based Management},
  howpublished = {\url{http://www.ietf.org/rfc/rfc3198}},
  month =	 {November},
  year =	 2001}

@InBook{Seibel,
  author =	 {Seibel, P.},
  title = 	 {Practical Common Lisp},
  chapter = 	 8,
  publisher = 	 {Apress},
  year = 	 2005}





@Misc{aopdbc,
  title = 	 {Contract enforcement with AOP},
  author = {Filipo Diotalevi},
  howpublished = {\url{http://www.ibm.com/developerworks/library/j-ceaop/}}
}

@incollection{citeulike:661450,
    abstract = {{A robust software component fulfills a contract: it expects data satisfying a certain property and promises to return data satisfying another property. The object-oriented community uses the design-by-contract approach extensively. Proposals for language extensions that add contracts to higher-order functional programming have appeared recently. In this paper we propose an embedded domain-specific language for typed, higher-order and first-class contracts, which is both more expressive than previous proposals, and allows for a more informative blame assignment. We take some first steps towards an algebra of contracts, and we show how to define a generic contract combinator for arbitrary algebraic data types. The contract language is implemented as a library in Haskell using the concept of generalised algebraic data types.}},
    address = {Berlin, Heidelberg},
    author = {Hinze, Ralf and Jeuring, Johan and L\"{o}h, Andres},
    booktitle = {Functional and Logic Programming},
    chapter = {15},
    citeulike-article-id = {661450},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/11737414\_15},
    citeulike-linkout-1 = {http://www.springerlink.com/content/w01115742074578r},
    doi = {10.1007/11737414\_15},
    editor = {Hagiya,, Masami and Wadler,, Philip},
    isbn = {978-3-540-33438-5},
    journal = {Lecture Notes in Computer Science},
    month = jan,
    pages = {208--225},
    posted-at = {2010-11-30 09:25:56},
    priority = {2},
    publisher = {Springer Berlin / Heidelberg},
    series = {Lecture Notes in Computer Science},
    title = {{Typed Contracts for Functional Programming}},
    url = {http://dx.doi.org/10.1007/11737414\_15},
    volume = {3945},
    year = {2006}
}

Link to the Racket Guide section on contracts:
@Misc{clojure,
  title = 	 {Clojure website},
  howpublished = {\url{http://www.clojure.org}}}

First attempt to use contracts in functional languages:
@Misc{clojure.fn,
  title = 	 {Clojure special forms},
  howpublished = {\url{http://clojure.org/special_forms#fn}}
}

@book{gof,
  address = {Boston, MA},
  author = {Erich Gamma and Richard Helm and Ralph Johnson and John Vlissides},
  howpublished = {Hardcover},
  publisher = {Addison-Wesley},
  title = {Design Patterns},
  year = 1995,
  isbn = {0201633612},
  month = {January}
}

Ralf's extension to Haskell:


JML Intro:
@article{historical,
 author = {Clarke, Lori A. and Rosenblum, David S.},
 title = {A historical perspective on runtime assertion checking in software development},
 journal = {SIGSOFT Softw. Eng. Notes},
 volume = {31},
 issue = {3},
 month = {May},
 year = {2006},
 issn = {0163-5948},
 pages = {25--37},
 numpages = {13},
 doi = {http://doi.acm.org/10.1145/1127878.1127900},
 acmid = {1127900},
 publisher = {ACM},
 address = {New York, NY, USA},
}



@InProceedings{hof,
  author = 	 {Robert Bruce Findler and Matthias Felleisen},
  title = 	 {Contracts for Higher-order functions},
  booktitle = {Proceedings of {ACM SIGPLAN} International Conference on Functional Programming},
  year = 	 2002,
  organization = {ACM SIGPLAN}}




jmlc manual page:
@Misc{htdp,
  title = 	 {How to design programs},
  author = {Matthias Felleisen and Robert Bruce Findler and Matthew Flatt and Shriram Krishnamurthi },
  howpublished = {\url{http://www.htdp.org/2003-09-26/Book/curriculum-Z-H-5.html#node_thm_2.2.1}}
}



@InProceedings{imprecise-exceptions,
  author = 	 {Peyton Jones, S. and Reid, A. and Hoare, T. and Marlow, S. and Henderson, F.},
  title = 	 {A semantics for imprecise exceptions},
  booktitle =	 {Symposium on Programming Language Design and Implementation},
  year =	 1999,
  organization = {SIGPLAN }} 

@MISC{jml,
    author = {Gary T. Leavens and Yoonsik Cheon},
    title = { Design by Contract with {JML}},
    year = {2006}
} 


@Misc{jmlc,
  title = 	 {jmlc documentation},
  howpublished = {\url{http://www.eecs.ucf.edu/~leavens/JML2/docs/man/jmlc.html}}} 






@Book{joy,
  author = 	 {Michael Fogus and Chris Houser},
  title = 	 {The Joy of Clojure},
  publisher = 	 {Manning Publications Co.},
  year = 	 {2011}
} 



@Book{kiczales,
  author =	 {Kiczales, G. and des Rivieres, J. and Bobrow, D. G.},
  title = 	 {The Art of the Metobject Protocol},
  publisher = 	 {MIT Press},
  year = 	 1991,
  month =	 {July}}

@ARTICLE{lsp,
    author = {Barbara H. Liskov and Jeanette M. Wing},
    title = {A Behavioral Notion of Subtyping},
    journal = {ACM Transactions on Programming Languages and Systems},
    year = {1994},
    volume = {16},
    pages = {1811--1841}
}






@Misc{objectcommando-blog,
    author = 	 {Ryan Senior},
  title = 	 {Design by Contract with Clojure},
  howpublished = "\url{http://objectcommando.com/blog/2010/03/07/design-by-contract-with-clojure/}",
  month =	 {March},
  year =	 2010}

@Misc{onclojure-blog,
    author = 	 {Konrad Hinsen},
  title = 	 {Pre and Post Conditions: a quest for a nicer syntax},
  howpublished = "\url{http://onclojure.com/2010/03/05/pre-and-post-conditions-a-quest-for-a-nicer-syntax/}",
  month =	 {March},
  year =	 2010}

@Book{oosc,
  author =	 {Bertrand Meyer},
  title = 	 {Object Oriented Software Construction},
  publisher = 	 {Prentice Hall},
  year = 	 1997,
  number =	 {ISBN 0-13-629155-4},
  edition = 	 2}

@Misc{racket,
  title = 	 {Guide:Racket},
  howpublished = {\url{http://docs.racket-lang.org/guide/contracts.html}}}


@Misc{toth10,
  author =	 {Herbert Toth},
  title =	 {Behavioral subtyping through typed assertions},
  howpublished = {http://arxiv.org/abs/1101.0114v1},
  month =	 {December},
  year =	 2010}