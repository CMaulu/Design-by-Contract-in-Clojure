Clojure website:
@Misc{ clojure,
  OPTkey = 	 {},
  OPTauthor = 	 {},
  title = 	 {Clojure website},
  howpublished = "\url{http://www.clojure.org}",
  OPTmonth = 	 {},
  OPTyear = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}




Definition of fn:
@Misc{clojure.fn,
  title = 	 {Clojure special forms},
  howpublished = {\url{http://clojure.org/special_forms#fn}},
}



Link to the Racket Guide section on contracts:
@Misc{racket,
  OPTkey = 	 {},
  OPTauthor = 	 {},
  title = 	 {Guide:Racket},
  howpublished = {\url{http://docs.racket-lang.org/guide/contracts.html}},
  OPTmonth = 	 {},
  OPTyear = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

First attempt to use contracts in functional languages:
@InProceedings{,
  author = 	 {Robert Bruce Findler and Matthias Felleisen},
  title = 	 {Contracts for Higher-order functions},
  OPTcrossref =  {},
  OPTkey = 	 {},
  OPTbooktitle = {},
  OPTpages = 	 {},
  year = 	 {2002},
  OPTeditor = 	 {},
  OPTvolume = 	 {},
  OPTnumber = 	 {},
  series = 	 {Proceedings of {ACM SIGPLAN} International Conference on Functional Programming},
  OPTaddress = 	 {},
  OPTmonth = 	 {},
  OPTorganization = {},
  OPTpublisher = {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

Ralf's extension to Haskell:


JML Intro:


jmlc manual page:
@Misc{jmlc,
  OPTkey = 	 {},
  OPTauthor = 	 {},
  title = 	 {jmlc documentation},
  howpublished = \url{http://www.eecs.ucf.edu/~leavens/JML2/docs/man/jmlc.html}
  OPTmonth = 	 {},
  OPTyear = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}
